{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\homework-16\\\\src\\\\store\\\\todo-context.js\";\nimport React, { Component, createContext } from 'react';\nimport Modal from '../components/UI/modal/Modal';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst expenses = [{\n  id: 'e1',\n  title: 'Toilet Paper',\n  amount: 94.12,\n  date: new Date(2020, 7, 14)\n}, {\n  id: 'e2',\n  title: 'New TV',\n  amount: 799.49,\n  date: new Date(2021, 2, 12)\n}, {\n  id: 'e3',\n  title: 'Car Insurance',\n  amount: 294.67,\n  date: new Date(2021, 2, 28)\n}, {\n  id: 'e4',\n  title: 'New Desk (Wooden)',\n  amount: 450,\n  date: new Date(2021, 5, 12)\n}];\nconst chartDataPoints = [{\n  label: 'Jan',\n  value: 0\n}, {\n  label: 'Feb',\n  value: 0\n}, {\n  label: 'Mar',\n  value: 0\n}, {\n  label: 'Apr',\n  value: 0\n}, {\n  label: 'May',\n  value: 0\n}, {\n  label: 'Jun',\n  value: 0\n}, {\n  label: 'Jul',\n  value: 0\n}, {\n  label: 'Aug',\n  value: 0\n}, {\n  label: 'Sep',\n  value: 0\n}, {\n  label: 'Oct',\n  value: 0\n}, {\n  label: 'Nov',\n  value: 0\n}, {\n  label: 'Dec',\n  value: 0\n}];\nexport const TodoContext = /*#__PURE__*/createContext({\n  expenses: []\n});\nexport default class TodoContextProvider extends Component {\n  constructor() {\n    super();\n    this.state = {\n      expenses: expenses,\n      dataPoints: chartDataPoints,\n      selectedYear: 'All',\n      isError: null\n    };\n  }\n  addExpenseHandler(expenses) {\n    console.log(expenses.date.toString());\n    if (expenses.date.toString() === 'Invalid Date' || expenses.amount.trim().length === 0 || expenses.title.trim().length === 0) {\n      this.setState({\n        isError: {\n          title: 'Input Valid',\n          message: 'Please enter tasks',\n          type: 'error'\n        }\n      });\n    } else {\n      this.setState({\n        expenses: [...this.state.expenses, expenses]\n      });\n    }\n  }\n  closeExpensesHandler() {\n    this.setState({\n      isError: null\n    });\n  }\n  selectChangeHandler(_ref) {\n    let {\n      target: {\n        value\n      }\n    } = _ref;\n    this.setState({\n      selectedYear: value\n    });\n  }\n  getCurrentExpenses() {\n    if (this.state.selectedYear === 'All') {\n      return this.state.expenses;\n    }\n    return this.state.expenses.filter(expense => expense.date.getFullYear().toString() === this.state.selectedYear.toString());\n  }\n  editExpensesDataHandler(id, text, price, date) {\n    let newArr = this.state.expenses.map(expense => {\n      if (expense.id === id) {\n        return {\n          ...expense,\n          title: text,\n          amount: price,\n          date: new Date(date)\n        };\n      }\n      return expense;\n    });\n    this.setState({\n      expenses: newArr\n    });\n  }\n  render() {\n    const {\n      isError\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n      value: {\n        setState: this.setState.bind(this),\n        expenses: this.state.expenses,\n        onAddExpense: this.addExpenseHandler.bind(this),\n        dataPoints: this.state.dataPoints,\n        currentExpenses: this.getCurrentExpenses.bind(this),\n        selectedYear: this.state.selectedYear,\n        selectChange: this.selectChangeHandler.bind(this),\n        editHandler: this.editExpensesDataHandler.bind(this)\n      },\n      children: [isError && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(Modal, {\n        ...isError,\n        toggle: this.closeExpensesHandler.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), document.getElementById('modal')), this.props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","createContext","Modal","ReactDOM","expenses","id","title","amount","date","Date","chartDataPoints","label","value","TodoContext","TodoContextProvider","constructor","state","dataPoints","selectedYear","isError","addExpenseHandler","console","log","toString","trim","length","setState","message","type","closeExpensesHandler","selectChangeHandler","target","getCurrentExpenses","filter","expense","getFullYear","editExpensesDataHandler","text","price","newArr","map","render","bind","onAddExpense","currentExpenses","selectChange","editHandler","createPortal","document","getElementById","props","children"],"sources":["C:/Users/user/Desktop/homework-16/src/store/todo-context.js"],"sourcesContent":["import React, { Component, createContext } from 'react';\r\nimport Modal from '../components/UI/modal/Modal';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst expenses = [\r\n  {\r\n    id: 'e1',\r\n    title: 'Toilet Paper',\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\r\n  {\r\n    id: 'e3',\r\n    title: 'Car Insurance',\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: 'e4',\r\n    title: 'New Desk (Wooden)',\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nconst chartDataPoints = [\r\n  { label: 'Jan', value: 0 },\r\n  { label: 'Feb', value: 0 },\r\n  { label: 'Mar', value: 0 },\r\n  { label: 'Apr', value: 0 },\r\n  { label: 'May', value: 0 },\r\n  { label: 'Jun', value: 0 },\r\n  { label: 'Jul', value: 0 },\r\n  { label: 'Aug', value: 0 },\r\n  { label: 'Sep', value: 0 },\r\n  { label: 'Oct', value: 0 },\r\n  { label: 'Nov', value: 0 },\r\n  { label: 'Dec', value: 0 },\r\n];\r\n\r\nexport const TodoContext = createContext({\r\n  expenses: [],\r\n});\r\n\r\nexport default class TodoContextProvider extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      expenses: expenses,\r\n      dataPoints: chartDataPoints,\r\n      selectedYear: 'All',\r\n      isError: null,\r\n    };\r\n  }\r\n\r\n  addExpenseHandler(expenses) {\r\n    console.log(expenses.date.toString());\r\n    if (\r\n      expenses.date.toString() === 'Invalid Date' ||\r\n      expenses.amount.trim().length === 0 ||\r\n      expenses.title.trim().length === 0\r\n    ) {\r\n      this.setState({\r\n        isError: {\r\n          title: 'Input Valid',\r\n          message: 'Please enter tasks',\r\n          type: 'error',\r\n        },\r\n      });\r\n    } else {\r\n      this.setState({ expenses: [...this.state.expenses, expenses] });\r\n    }\r\n  }\r\n\r\n  closeExpensesHandler() {\r\n    this.setState({ isError: null });\r\n  }\r\n\r\n  selectChangeHandler({ target: { value } }) {\r\n    this.setState({ selectedYear: value });\r\n  }\r\n\r\n  getCurrentExpenses() {\r\n    if (this.state.selectedYear === 'All') {\r\n      return this.state.expenses;\r\n    }\r\n    return this.state.expenses.filter(\r\n      (expense) =>\r\n        expense.date.getFullYear().toString() ===\r\n        this.state.selectedYear.toString()\r\n    );\r\n  }\r\n\r\n  editExpensesDataHandler(id, text, price, date) {\r\n    let newArr = this.state.expenses.map((expense) => {\r\n      if (expense.id === id) {\r\n        return { ...expense, title: text, amount: price, date: new Date(date) };\r\n      }\r\n      return expense;\r\n    });\r\n    this.setState({ expenses: newArr });\r\n  }\r\n\r\n  render() {\r\n    const { isError } = this.state;\r\n    return (\r\n      <TodoContext.Provider\r\n        value={{\r\n          setState: this.setState.bind(this),\r\n          expenses: this.state.expenses,\r\n          onAddExpense: this.addExpenseHandler.bind(this),\r\n          dataPoints: this.state.dataPoints,\r\n          currentExpenses: this.getCurrentExpenses.bind(this),\r\n          selectedYear: this.state.selectedYear,\r\n          selectChange: this.selectChangeHandler.bind(this),\r\n          editHandler: this.editExpensesDataHandler.bind(this),\r\n        }}\r\n      >\r\n        {isError &&\r\n          ReactDOM.createPortal(\r\n            <Modal\r\n              {...isError}\r\n              toggle={this.closeExpensesHandler.bind(this)}\r\n            />,\r\n            document.getElementById('modal')\r\n          )}\r\n        {this.props.children}\r\n      </TodoContext.Provider>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}